{# Check & auto repair #}
{% if layout not in ['top-right', 'top-left', 'top-full-width', 'bottom-right', 'bottom-left', 'bottom-full-width'] %}
    {% set layout = 'top-right' %}
{% endif %}

<script type="text/javascript" src="{{asset('bundles/avawesomealertify/toastr/js/toastr.js')}}"></script>
<link rel="stylesheet" href="{{asset('bundles/avawesomealertify/toastr/css/toastr.css')}}">

<script type="text/javascript">
    (function() {
      var delay;

      delay = function(ms, func) {
        return setTimeout(func, ms);
    };

    //
    toastr.options = {
        positionClass    : 'toast-{{ layout }}', //top-right, top-left, top-full-width, bottom-right, bottom-left, bottom-full-width
        closeButton    : {{ closeButton|default('false') }},
        debug          : {{ debug|default('false') }},
        positionClass  : '{{ positionClass|default('toast-top-right') }}',
        onclick        : {{ onclick|default('null') }},
        showDuration   : {{ showDuration|default('20000') }},
        hideDuration   : {{ hideDuration|default('1000') }},
        timeOut        : {{ timeOut|default('5000') }},
        extendedTimeOut: {{ extendedTimeOut|default('1000') }},
        showEasing     : '{{ showEasing|default('swing') }}',
        hideEasing     : '{{ hideEasing|default('linear') }}',
        showMethod     : '{{ showMethod|default('fadeIn') }}',
        hideMethod     : '{{ hideMethod|default('fadeOut') }}'
    };

    //Available options
    // toastr.options = {
    // }

    delay({% if timeout is defined and timeout != null %} {{ timeout }}{% else %} 1000{% endif %} , function() {
        return toastr.{{ type }}("{{ body|raw|trans({}, translationDomain|default('messages')) }}","{{ title|default(("alert."~type~".label")|trans({}, translationDomain|default('messages'))) }}");
    });

}).call(this);
</script>
